{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/decimal.directive.ts","webpack:///./src/app/error-dialog/errordialog.component.html","webpack:///./src/app/error-dialog/errordialog.component.ts","webpack:///./src/app/error-dialog/errordialog.service.ts","webpack:///./src/app/interceptor/httpconfig.interceptor.ts","webpack:///./src/app/services/test.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n\\n\\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n\\n    <div class=\\\"header\\\">\\n      Header\\n    </div>\\n\\n    <div class=\\\"main\\\">\\n      <input type=\\\"text\\\" formControlName=\\\"textData\\\" class=\\\"form-control\\\"\\n        [ngClass]=\\\"{ 'is-invalid': submitted && f.textData.errors }\\\" />\\n      <div *ngIf=\\\"submitted && f.textData.errors\\\" class=\\\"invalid-feedback\\\">\\n        <div *ngIf=\\\"f.textData.errors.required\\\">Text data is required</div>\\n        <div *ngIf=\\\"f.textData.errors.maxlength\\\">Text data must be less than 50 characters</div>\\n      </div>\\n\\n      <input type=\\\"number\\\" appTwoDigitDecimaNumber formControlName=\\\"numberData\\\" class=\\\"form-control\\\"\\n        [ngClass]=\\\"{ 'is-invalid': submitted && f.numberData.errors }\\\" />\\n      <div *ngIf=\\\"submitted && f.numberData.errors\\\" class=\\\"invalid-feedback\\\">\\n        <div *ngIf=\\\"f.numberData.errors.required\\\">Number data is required</div>\\n        <div *ngIf=\\\"f.numberData.errors.min\\\">Number data must be greater than 0</div>\\n        <div *ngIf=\\\"f.numberData.errors.max\\\">Number data must be less than 10000</div>\\n      </div>\\n\\n      <div class=\\\"request-list\\\">\\n        <table>\\n          <tr>\\n            <th>Type</th>\\n            <th>Timestamp</th>\\n            <th>Text</th>\\n            <th>Number</th>\\n          </tr>\\n          <tr *ngFor=\\\"let request of requestList\\\">\\n            <td>{{request.type}}</td>\\n            <td>{{request.timestamp}}</td>\\n            <td>{{request.request?.textData}}</td>\\n            <td>{{request.request?.numberData}}</td>\\n          </tr>\\n        </table>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"footer\\\">\\n      <h4>test</h4>\\n      <button>request</button>\\n    </div>\\n  </form>\\n</div>\\n\\n<router-outlet></router-outlet>\"","module.exports = \".container {\\n  position: fixed;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  width: 400px;\\n  height: 600px;\\n  background-color: gray; }\\n  .container .header {\\n    position: relative;\\n    width: 100%;\\n    height: 100px;\\n    background-color: red;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center; }\\n  .container .footer {\\n    height: 100px;\\n    background-color: blue;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    padding: 0 25px 0 15px; }\\n  .container .main {\\n    width: 100%;\\n    height: 400px;\\n    padding: 1rem;\\n    box-sizing: border-box; }\\n  .container .main input {\\n      height: 35px;\\n      width: 100%;\\n      margin: 0.5rem 0;\\n      font-size: 18px; }\\n  .container .main .request-list {\\n      height: 230px;\\n      background-color: white;\\n      overflow-y: auto; }\\n  .container .main .request-list table th, .container .main .request-list td {\\n        width: 25%;\\n        text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Wb2x1bWVzL3dvcmtpbmcvNC4gQW5ndWxhckpTL1JlYWR5QmlkL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtFQUNmLFFBQVE7RUFDUixTQUFTO0VBQ1Qsd0NBQWdDO1VBQWhDLGdDQUFnQztFQUNoQyxZQUFZO0VBQ1osYUFBYTtFQUNiLHNCQUFzQixFQUFBO0VBUHhCO0lBU0ksa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxhQUFhO0lBQ2IscUJBQXFCO0lBQ3JCLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CLEVBQUE7RUFmdkI7SUFrQkksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLG1CQUFtQjtJQUNuQixzQkFBc0IsRUFBQTtFQXZCMUI7SUEwQkksV0FBVztJQUNYLGFBQWE7SUFDYixhQUFhO0lBQ2Isc0JBQXNCLEVBQUE7RUE3QjFCO01BZ0NNLFlBQVk7TUFDWixXQUFXO01BQ1gsZ0JBQWdCO01BQ2hCLGVBQWUsRUFBQTtFQW5DckI7TUFzQ00sYUFBYTtNQUNiLHVCQUF1QjtNQUN2QixnQkFBZ0IsRUFBQTtFQXhDdEI7UUEwQ1EsVUFBVTtRQUNWLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHdpZHRoOiA0MDBweDtcbiAgaGVpZ2h0OiA2MDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcbiAgLmhlYWRlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxuICAuZm9vdGVyIHtcbiAgICBoZWlnaHQ6IDEwMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAwIDI1cHggMCAxNXB4O1xuICB9XG4gIC5tYWluIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDQwMHB4O1xuICAgIHBhZGRpbmc6IDFyZW07XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcblxuICAgIGlucHV0IHtcbiAgICAgIGhlaWdodDogMzVweDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luOiAwLjVyZW0gMDtcbiAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICB9XG4gICAgLnJlcXVlc3QtbGlzdCB7XG4gICAgICBoZWlnaHQ6IDIzMHB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgICAgdGFibGUgdGgsIHRkIHtcbiAgICAgICAgd2lkdGg6IDI1JTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TestService } from './services/test.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder, public testService: TestService) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      textData: ['', [Validators.required, Validators.maxLength(50)]],\n      numberData: ['', [Validators.required, Validators.min(0), Validators.max(10000)]]\n    });\n  }\n\n  get requestList() {\n    return this.testService.requestList;\n  }\n\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.registerForm.invalid) {\n      return;\n    }\n    this.testService.login(this.registerForm.value).subscribe(data => {\n      console.log(data);\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TwoDigitDecimaNumberDirective } from './decimal.directive';\nimport { MatDialogModule } from '@angular/material';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ErrorDialogComponent } from './error-dialog/errordialog.component';\nimport { TestService } from './services/test.service';\nimport { ErrorDialogService } from './error-dialog/errordialog.service';\nimport { HttpConfigInterceptor } from './interceptor/httpconfig.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TwoDigitDecimaNumberDirective,\n    ErrorDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    HttpClientModule\n  ],\n  providers: [\n    TestService,\n    ErrorDialogService,\n    { provide: HTTP_INTERCEPTORS, useClass: HttpConfigInterceptor, multi: true }\n  ],\n  entryComponents: [ErrorDialogComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n@Directive({\n  selector: '[appTwoDigitDecimaNumber]'\n})\nexport class TwoDigitDecimaNumberDirective {\n  private regex: RegExp = new RegExp(/^\\d*\\.?\\d{0,2}$/g);\n  private specialKeys: Array<string> = ['Backspace', 'Tab', 'End', 'Home', '-'];\n  constructor(private el: ElementRef) {\n  }\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    console.log(this.el.nativeElement.value);\n    // Allow Backspace, tab, end, and home keys\n    if (this.specialKeys.indexOf(event.key) !== -1) {\n      return;\n    }\n    let current: string = this.el.nativeElement.value;\n    let next: string = current.concat(event.key);\n    if (next && !String(next).match(this.regex)) {\n      event.preventDefault();\n    }\n  }\n}","module.exports = \"<div>\\n  <div>\\n    <p>\\n      Reason: {{data.reason}}\\n    </p>\\n    <p>\\n      Status: {{data.status}}\\n    </p>\\n  </div>\\n</div>\"","\nimport { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './errordialog.component.html'\n})\nexport class ErrorDialogComponent {\n  title = 'Angular-Interceptor';\n  constructor(@Inject(MAT_DIALOG_DATA) public data: string) { }\n}","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ErrorDialogComponent } from './errordialog.component';\n\n@Injectable()\nexport class ErrorDialogService {\n\n  constructor(public dialog: MatDialog) { }\n  openDialog(data): void {\n    const dialogRef = this.dialog.open(ErrorDialogComponent, {\n      width: '300px',\n      data: data\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      let animal;\n      animal = result;\n    });\n  }\n}","import { Injectable } from '@angular/core';\nimport { ErrorDialogService } from '../error-dialog/errordialog.service';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n  HttpHandler,\n  HttpEvent,\n  HttpErrorResponse\n} from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { TestService } from '../services/test.service';\n\n@Injectable()\nexport class HttpConfigInterceptor implements HttpInterceptor {\n  constructor(\n    private errorDialogService: ErrorDialogService,\n    private testService: TestService\n  ) { }\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token: string = localStorage.getItem('token');\n\n    if (token) {\n      request = request.clone({ headers: request.headers.set('Authorization', 'Bearer ' + token) });\n    }\n\n    if (!request.headers.has('Content-Type')) {\n      request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\n    }\n\n    request = request.clone({ headers: request.headers.set('Accept', 'application/json') });\n\n    return next.handle(request).pipe(\n      map((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          console.log('event--->>>', event);\n          // this.errorDialogService.openDialog(event);\n          this.testService.requestList = { type: 'success', timestamp: Date.now(), request: request.body };\n        }\n        return event;\n      }),\n      catchError((error: HttpErrorResponse) => {\n        let data = {};\n        console.log(error);\n        data = {\n          reason: error.message,\n          status: error.status\n        };\n        this.errorDialogService.openDialog(data);\n        this.testService.requestList = { type: 'error', timestamp: Date.now(), request: request.body };\n        return throwError(error);\n      }));\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class TestService {\n\n    _requestList: any = [];\n\n    constructor(private http: HttpClient) { }\n\n    login(data) {\n        // data = { email: 'admin@example.com', password: 'Test@123' };\n        return this.http.post('https://api.ipify.org?format=json', data);\n    }\n    \n    get requestList() {\n        return this._requestList;\n    }\n\n    set requestList(request: any) {\n        this._requestList.push(request);\n    }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}